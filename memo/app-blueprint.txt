
アプリ初期化時に、ファイルから単語一覧を"herokuのpostgreSQLの"データベースに登録
(github pagesは動的サイトに対応していない)
↓
ブラウザからhtmlが読み込まれた後の最初のfetch request(get)に対して、
データベースからカテゴリーの状態も含めた単語の一覧をjsonで返す
↓
カテゴリーの種類が変更された場合は、その都度fetch request(put)を送信しサーバーのデータベースを更新する。
(正しいレスポンスが来なかったら、警告をブラウザ上に表示し、種類の変更を取り消す)


Githubからherokuにプッシュ

スリープモードにならないように定期的にhttpリクエスト
    
セクション切り替えのとき、wordListDataから直接いらないオブジェクトを消去するのではなく、
currentSectionを参照して、表示する文を計算するようにする

<API仕様>
/   (GET)
    htmlを返す
/word_list  (GET)
    単語の一覧を全て返す
    レスポンス例:
    {"top":[
        {
            id:"1",
            category:"none",
            enWord:"improve",
            jaMeaning:["向上させる", "良くなる"]
            enIsDisplayed: true,        //React内で追加
            jaIsDisplayed: true,        //React内で追加
        },
        {
            id:"2",
            category:"none",
            enWord:"relate",
            jaMeaning:["関連付ける", "関連する"]
            enIsDisplayed: true,        //React内で追加
            jaIsDisplayed: true,        //React内で追加
        },
        ...
    ]}
/word_list(word_category?)  (PUT)
    特定の単語のカテゴリーを更新する
    (REST APIに基づいてリソースとURLを結びつけるなら、単語一覧のテーブルとカテゴリーのテーブルは分けるべき？)
[
    {
        id:1,
        category: "red",
        enWord: "hoge",
        enIsDisplayed: true,
        jaIsDisplayed: true,
        jaMeaning: ["HI"],
    }
];

・hooks(関数コンポーネント)のライフサイクルを理解していない
・変数名、関数名の区別、統一がされていない
    enとjaの対はオブジェクトにまとめる
・useReducuerを使う！！！(wordListDataの更新処理を集約させる)
・処理を関数で分けていない(カスタムフック)
・データ型、スコープを理解していない
・カスタムフックを使っていない
・ファイル分けしていない

    //セクション切り替えのとき、wordListDataから直接いらないオブジェクトを消去するのではなく、
    //currentSectionを参照して、表示する文を計算するようにする

恐らくdispatch内のcWordListDataの参照変更は失敗


